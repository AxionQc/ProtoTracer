#pragma once

#include "Arduino.h"
#include "..\..\Math\Rotation.h"
#include "..\Morph.h"
#include "..\..\Materials\SimpleMaterial.h"
#include "..\..\Render\IndexGroup.h"
#include "..\..\Render\Object3D.h"

class XenraxSpiral{
public:
    Vector3D basisVertices[114] = {Vector3D(-51.0259f,0.0000f,-518.0843f),Vector3D(447.9553f,0.0000f,-299.3143f),Vector3D(339.8210f,0.0000f,-414.0717f),Vector3D(521.9284f,0.0000f,-172.1807f),Vector3D(71.9106f,0.0000f,38.1556f),Vector3D(28.2857f,0.0000f,92.5163f),Vector3D(-52.6703f,0.0000f,98.9374f),Vector3D(-121.8894f,0.0000f,37.1538f),Vector3D(-125.9876f,0.0000f,-67.1608f),Vector3D(-46.0434f,0.0000f,-151.2643f),Vector3D(81.6429f,0.0000f,-153.0497f),Vector3D(180.6416f,0.0000f,-54.9428f),Vector3D(153.3078f,0.0000f,-505.3853f),Vector3D(462.9049f,0.0000f,-307.6627f),Vector3D(291.9555f,0.0000f,-477.0120f),Vector3D(180.1183f,0.0000f,96.1216f),Vector3D(63.8474f,0.0000f,210.0210f),Vector3D(-110.5988f,0.0000f,207.1909f),Vector3D(-213.2311f,0.0000f,113.9776f),Vector3D(-248.1161f,0.0000f,24.4398f),Vector3D(-245.7928f,0.0000f,-74.5581f),Vector3D(-204.3755f,0.0000f,-167.7240f),Vector3D(-128.1850f,0.0000f,-239.8135f),Vector3D(-27.3933f,0.0000f,-278.1120f),Vector3D(83.3082f,0.0000f,-274.6357f),Vector3D(186.8459f,0.0000f,-227.6744f),Vector3D(266.3958f,0.0000f,-142.3929f),Vector3D(308.1081f,0.0000f,-30.3471f),Vector3D(303.4789f,0.0000f,92.0583f),Vector3D(250.9735f,0.0000f,205.9677f),Vector3D(156.6011f,0.0000f,292.9783f),Vector3D(33.3008f,0.0000f,338.1044f),Vector3D(-100.8084f,0.0000f,332.3223f),Vector3D(-225.0896f,0.0000f,274.2729f),Vector3D(-319.5610f,0.0000f,170.8092f),Vector3D(-368.1009f,0.0000f,36.2548f),Vector3D(-361.1659f,0.0000f,-109.5584f),Vector3D(-297.5725f,0.0000f,-244.2114f),Vector3D(-185.0175f,0.0000f,-346.1438f),Vector3D(-39.2090f,0.0000f,-398.0974f),Vector3D(118.3083f,0.0000f,-390.0097f),Vector3D(263.3334f,0.0000f,-320.8722f),Vector3D(372.7265f,0.0000f,-199.2260f),Vector3D(428.0940f,0.0000f,-42.1632f),Vector3D(418.8534f,0.0000f,127.0582f),Vector3D(-390.7718f,0.0000f,-320.6991f),Vector3D(-241.8519f,0.0000f,-452.4749f),Vector3D(63.3727f,0.0000f,-552.1966f),Vector3D(59.4592f,0.0000f,-45.4814f),Vector3D(-128.7218f,0.0000f,-540.7106f),Vector3D(344.1720f,0.0000f,282.4552f),Vector3D(213.4346f,0.0000f,399.3092f),Vector3D(45.1174f,0.0000f,458.0907f),Vector3D(-135.8081f,0.0000f,447.6973f),Vector3D(-301.5773f,0.0000f,367.4717f),Vector3D(-425.8921f,0.0000f,227.6432f),Vector3D(-488.0875f,0.0000f,48.0716f),Vector3D(-476.5413f,0.0000f,-144.5579f),Vector3D(-18.4974f,0.0000f,-70.6492f),Vector3D(-346.7171f,0.0000f,-438.8231f),Vector3D(-63.0036f,0.0000f,-35.1915f),Vector3D(-29.0317f,0.0000f,-84.2108f),Vector3D(45.7981f,0.0000f,-93.8334f),Vector3D(113.2571f,0.0000f,-38.9104f),Vector3D(121.3686f,0.0000f,59.3396f),Vector3D(48.8159f,0.0000f,142.3034f),Vector3D(-72.8700f,0.0000f,148.9173f),Vector3D(-171.3517f,0.0000f,58.7333f),Vector3D(-176.4734f,0.0000f,-86.3959f),Vector3D(-68.6567f,0.0000f,-200.4020f),Vector3D(99.9197f,0.0000f,-204.0339f),Vector3D(229.4537f,0.0000f,-78.5837f),Vector3D(240.9625f,0.0000f,63.9999f),Vector3D(204.1166f,0.0000f,155.9148f),Vector3D(132.6948f,0.0000f,228.6761f),Vector3D(36.0829f,0.0000f,269.5179f),Vector3D(-71.7381f,0.0000f,270.0932f),Vector3D(-174.2118f,0.0000f,228.0687f),Vector3D(-254.7465f,0.0000f,147.8215f),Vector3D(-299.3926f,0.0000f,40.0818f),Vector3D(-299.2241f,0.0000f,-79.4763f),Vector3D(-252.0208f,0.0000f,-192.5090f),Vector3D(-162.9485f,0.0000f,-280.8170f),Vector3D(-44.0807f,0.0000f,-329.2675f),Vector3D(87.2145f,0.0000f,-328.3553f),Vector3D(210.8061f,0.0000f,-275.9733f),Vector3D(306.8875f,0.0000f,-178.0759f),Vector3D(359.1425f,0.0000f,-48.0798f),Vector3D(357.4866f,0.0000f,94.9525f),Vector3D(299.9260f,0.0000f,229.1031f),Vector3D(193.2034f,0.0000f,332.9581f),Vector3D(52.0787f,0.0000f,389.0177f),Vector3D(-102.6906f,0.0000f,386.6180f),Vector3D(-247.4003f,0.0000f,323.8787f),Vector3D(-359.0286f,0.0000f,208.3311f),Vector3D(-418.8929f,0.0000f,56.0783f),Vector3D(-415.7497f,0.0000f,-110.4284f),Vector3D(-347.8318f,0.0000f,-265.6973f),Vector3D(-223.4587f,0.0000f,-385.0993f),Vector3D(-60.0776f,0.0000f,-448.7682f),Vector3D(118.1662f,0.0000f,-444.8813f),Vector3D(283.9946f,0.0000f,-371.7846f),Vector3D(411.1703f,0.0000f,-238.5861f),Vector3D(478.6436f,0.0000f,-64.0765f),Vector3D(474.0130f,0.0000f,125.9044f),Vector3D(395.7378f,0.0000f,302.2915f),Vector3D(253.7138f,0.0000f,437.2411f),Vector3D(68.0762f,0.0000f,508.5189f),Vector3D(-133.6420f,0.0000f,503.1449f),Vector3D(-320.5886f,0.0000f,419.6910f),Vector3D(-463.3118f,0.0000f,268.8417f),Vector3D(-538.3945f,0.0000f,72.0754f),Vector3D(-532.2767f,0.0000f,-141.3797f),Vector3D(-470.8838f,0.0000f,-291.3915f)};
    IndexGroup basisIndexes[112] = {IndexGroup(58,61,60),IndexGroup(4,64,48),IndexGroup(48,63,62),IndexGroup(48,62,58),IndexGroup(58,62,61),IndexGroup(5,65,64),IndexGroup(65,6,66),IndexGroup(11,15,71),IndexGroup(15,72,71),IndexGroup(15,73,72),IndexGroup(16,74,73),IndexGroup(16,75,74),IndexGroup(17,76,75),IndexGroup(17,77,76),IndexGroup(18,78,77),IndexGroup(19,79,78),IndexGroup(20,80,79),IndexGroup(21,81,80),IndexGroup(22,82,81),IndexGroup(23,83,82),IndexGroup(24,84,83),IndexGroup(25,85,84),IndexGroup(26,86,85),IndexGroup(27,87,86),IndexGroup(28,88,87),IndexGroup(29,89,88),IndexGroup(30,90,89),IndexGroup(31,91,90),IndexGroup(32,92,91),IndexGroup(33,93,92),IndexGroup(34,94,93),IndexGroup(35,95,94),IndexGroup(36,96,95),IndexGroup(37,97,96),IndexGroup(38,98,97),IndexGroup(39,99,98),IndexGroup(40,100,99),IndexGroup(41,101,100),IndexGroup(42,102,101),IndexGroup(43,103,102),IndexGroup(44,104,103),IndexGroup(0,49,46),IndexGroup(45,59,57),IndexGroup(46,59,45),IndexGroup(1,13,2),IndexGroup(2,14,12),IndexGroup(12,14,47),IndexGroup(46,49,59),IndexGroup(2,13,14),IndexGroup(48,64,63),IndexGroup(4,5,64),IndexGroup(66,7,67),IndexGroup(67,8,68),IndexGroup(69,8,9),IndexGroup(70,9,10),IndexGroup(71,10,11),IndexGroup(105,44,50),IndexGroup(15,16,73),IndexGroup(16,17,75),IndexGroup(17,18,77),IndexGroup(18,19,78),IndexGroup(19,20,79),IndexGroup(20,21,80),IndexGroup(21,22,81),IndexGroup(22,23,82),IndexGroup(23,24,83),IndexGroup(24,25,84),IndexGroup(25,26,85),IndexGroup(26,27,86),IndexGroup(27,28,87),IndexGroup(28,29,88),IndexGroup(29,30,89),IndexGroup(30,31,90),IndexGroup(31,32,91),IndexGroup(32,33,92),IndexGroup(33,34,93),IndexGroup(34,35,94),IndexGroup(35,36,95),IndexGroup(36,37,96),IndexGroup(37,38,97),IndexGroup(38,39,98),IndexGroup(39,40,99),IndexGroup(40,41,100),IndexGroup(41,42,101),IndexGroup(42,43,102),IndexGroup(43,44,103),IndexGroup(106,50,51),IndexGroup(107,51,52),IndexGroup(108,52,53),IndexGroup(109,53,54),IndexGroup(110,54,55),IndexGroup(111,55,56),IndexGroup(112,56,57),IndexGroup(47,0,12),IndexGroup(113,57,59),IndexGroup(1,3,13),IndexGroup(65,5,6),IndexGroup(66,6,7),IndexGroup(67,7,8),IndexGroup(69,68,8),IndexGroup(70,69,9),IndexGroup(71,70,10),IndexGroup(105,104,44),IndexGroup(106,105,50),IndexGroup(107,106,51),IndexGroup(108,107,52),IndexGroup(109,108,53),IndexGroup(110,109,54),IndexGroup(111,110,55),IndexGroup(112,111,56),IndexGroup(47,49,0),IndexGroup(113,112,57)};
    TriangleGroup triangleGroup = TriangleGroup(&basisVertices[0], &basisIndexes[0], 114, 112);
    SimpleMaterial simpleMaterial = SimpleMaterial(RGBColor(128, 128, 128));
    Object3D basisObj = Object3D(&triangleGroup, &simpleMaterial);

    static const byte morphCount = 0;

public:
    XenraxSpiral(){}

    Object3D* GetObject(){
        return &basisObj;
    }
    
    void Reset(){ }

    void Update(){
        basisObj.ResetVertices();
    }
};
